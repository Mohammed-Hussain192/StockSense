<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>StockSense - <%= details.name %> Details</title>
    <link rel="stylesheet" href="/styles/MarketDetails.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
   
</head>
<body>
    <!-- Navigation Bar -->
    <nav class="navbar">
        <a href="index.html" class="logo">
            <i class="fas fa-chart-line"></i>StockSense
        </a>
        <ul class="nav-links">
          <a href="/home">Home</a>
            <a href="/market">Markets</a>
            <a href="/watchlist">Watchlist</a>
            <a href="Profile">Portfolio</a>
            <a href="/search/stock">Search Stock</a>
            
            <a href="/news">News</a>
        </ul>
        <div class="auth-buttons">
            <div class="theme-toggle" id="themeToggle">
                <i class="fas fa-moon toggle-icon"></i>
                <span class="toggle-text">Dark Mode</span>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="main-container">
        <!-- Market Details Card -->
        <div class="details-card">
            <div class="details-header">
                <h1 class="details-title"><%= details.name %></h1>
                <span class="details-symbol"><%= details.symbol %></span>
            </div>

            <div class="details-row">
                <div class="details-col">
                    <div class="details-label">Exchange</div>
                    <div class="details-value"><%= details.exchange %></div>
                </div>
                <div class="details-col">
                    <div class="details-label">Currency</div>
                    <div class="details-value"><%= details.currency %></div>
                </div>
                <div class="details-col">
                    <div class="details-label">Current Price</div>
                    <div class="details-value"><%= details.price %></div>
                </div>
                <div class="details-col">
                    <div class="details-label">Open</div>
                    <div class="details-value"><%= details.open %></div>
                </div>
                <div class="details-col">
                    <div class="details-label">Previous Close</div>
                    <div class="details-value"><%= details.previousClose %></div>
                </div>
                <div class="details-col">
                    <div class="details-label">Day High</div>
                    <div class="details-value"><%= details.dayHigh %></div>
                </div>
                <div class="details-col">
                    <div class="details-label">Day Low</div>
                    <div class="details-value"><%= details.dayLow %></div>
                </div>
                <div class="details-col">
                    <div class="details-label">Market Cap</div>
                    <div class="details-value"><%= details.marketCap %></div>
                </div>
                <div class="details-col">
                    <div class="details-label">Volume</div>
                    <div class="details-value"><%= details.volume %></div>
                </div>
            </div>
        </div>

        <!-- Price Chart -->
        <% if (!noChart) { %>
            <div class="chart-container">
                <h3 class="chart-title">Price Trend (Last 30 Days)</h3>
                <canvas id="priceChart" width="100%" height="400"></canvas>
                <script>
                    const ctx = document.getElementById('priceChart').getContext('2d');
                    const labels = <%- JSON.stringify(graphData.map(d => d.date)) %>;
                    const data = <%- JSON.stringify(graphData.map(d => d.close)) %>;

                    // Determine chart colors based on theme
                    const isLightMode = document.body.classList.contains('light-mode');
                    const borderColor = isLightMode ? 'rgba(42, 125, 225, 1)' : 'rgba(75, 192, 192, 1)';
                    const backgroundColor = isLightMode ? 'rgba(42, 125, 225, 0.1)' : 'rgba(75, 192, 192, 0.1)';

                    const chart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Closing Price',
                                data: data,
                                borderColor: borderColor,
                                backgroundColor: backgroundColor,
                                borderWidth: 2,
                                fill: true,
                                tension: 0.3,
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                legend: {
                                    display: true,
                                    position: 'top'
                                }
                            },
                            scales: {
                                x: {
                                    display: true,
                                    title: {
                                        display: true,
                                        text: 'Date'
                                    },
                                    grid: {
                                        color: isLightMode ? 'rgba(0, 0, 0, 0.1)' : 'rgba(255, 255, 255, 0.1)'
                                    }
                                },
                                y: {
                                    display: true,
                                    title: {
                                        display: true,
                                        text: 'Price'
                                    },
                                    grid: {
                                        color: isLightMode ? 'rgba(0, 0, 0, 0.1)' : 'rgba(255, 255, 255, 0.1)'
                                    }
                                }
                            }
                        }
                    });

                    // Update chart colors when theme changes
                    const themeToggle = document.getElementById('themeToggle');
                    themeToggle.addEventListener('click', () => {
                        const isLight = document.body.classList.contains('light-mode');
                        const newBorderColor = isLight ? 'rgba(42, 125, 225, 1)' : 'rgba(75, 192, 192, 1)';
                        const newBgColor = isLight ? 'rgba(42, 125, 225, 0.1)' : 'rgba(75, 192, 192, 0.1)';
                        const gridColor = isLight ? 'rgba(0, 0, 0, 0.1)' : 'rgba(255, 255, 255, 0.1)';

                        chart.data.datasets[0].borderColor = newBorderColor;
                        chart.data.datasets[0].backgroundColor = newBgColor;
                        chart.options.scales.x.grid.color = gridColor;
                        chart.options.scales.y.grid.color = gridColor;
                        chart.update();
                    });
                </script>
            </div>
        <% } else { %>
            <div class="chart-container">
                <h3 class="chart-title">Price Trend</h3>
                <p class="no-data-message">Chart data is not available for this market.</p>
            </div>
        <% } %>

        <a href="/market" class="back-button">
            <i class="fas fa-arrow-left back-icon"></i>
            Back to Market List
        </a>
    </div>

    <script>
        // Theme Toggle Functionality
        const themeToggle = document.getElementById('themeToggle');
        const toggleIcon = themeToggle.querySelector('.toggle-icon');
        const toggleText = themeToggle.querySelector('.toggle-text');

        // Check for saved theme preference or use preferred color scheme
        const currentTheme = localStorage.getItem('theme') || 
                            (window.matchMedia('(prefers-color-scheme: light)').matches ? 'light' : 'dark');

        if (currentTheme === 'light') {
            document.body.classList.add('light-mode');
            toggleIcon.classList.replace('fa-moon', 'fa-sun');
            toggleText.textContent = 'Light Mode';
        }

        themeToggle.addEventListener('click', () => {
            document.body.classList.toggle('light-mode');
            const isLightMode = document.body.classList.contains('light-mode');
            
            if (isLightMode) {
                toggleIcon.classList.replace('fa-moon', 'fa-sun');
                toggleText.textContent = 'Light Mode';
                localStorage.setItem('theme', 'light');
            } else {
                toggleIcon.classList.replace('fa-sun', 'fa-moon');
                toggleText.textContent = 'Dark Mode';
                localStorage.setItem('theme', 'dark');
            }
        });
    </script>
</body>
</html>